{
    "swagger": "2.0",
    "info": {
        "title": "Comms",
        "description": "Retrieve details about communications",
        "version": "1.0.0"
    },
    "host": "api.bris.tech:8080",
    "schemes": [
        "https"
    ],
    "basePath": "/",
    "produces": [
        "application/json"
    ],
    "paths": {
        "/Correspondence": {
            "post": {
                "tags": [
                    "comms"
                ],
                "summary": "Adds a correspondence item",
                "description": "Creates a correspondence item",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "The correspondence item",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Correspondence"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Correspondence item successfully created",
                        "schema": {
                            "$ref": "#/definitions/CorrespondenceItemCreated"
                        }
                    },
                    "422": {
                        "description": "Communication thread validation error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "comms"
                ],
                "summary": "Get correspondence items between two profiles",
                "description": "Get correspondence items between two profiles",
                "parameters": [
                    {
                        "in": "query",
                        "name": "profileIdOne",
                        "description": "The identifier for the first profile",
                        "required": true,
                        "type": "string",
                        "format": "guid"
                    },
                    {
                        "in": "query",
                        "name": "profileIdTwo",
                        "description": "The identifier for the second profile",
                        "required": true,
                        "type": "string",
                        "format": "guid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Correspondence found",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Correspondence"
                            }
                        }
                    }
                }
            }
        },
        "/last-contact": {
            "get": {
                "tags": [
                    "comms"
                ],
                "summary": "Retrieves the last contact date for all profiles who have communicated",
                "description": "The last contact date for all pairs of profiles with communication which includes the id for the pair, the date of the last contact, and the ids for the two profiles in the pair\n",
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/LastContact"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "Correspondence": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "format": "guid",
                    "description": "Identifier for correspondence item"
                },
                "externalId": {
                    "type": "string",
                    "description": "External Identifier for correspondence message"
                },
                "senderId": {
                    "type": "string",
                    "format": "guid",
                    "description": "The identifier of the sender"
                },
                "receiverId": {
                    "type": "string",
                    "format": "guid",
                    "description": "The identifier of the reciever"
                },
                "type": {
                    "type": "string",
                    "description": "The type of correspondence",
                    "enum": [
                        "email",
                        "mobile",
                        "twitter",
                        "meetup"
                    ]
                },
                "senderHandle": {
                    "type": "string",
                    "description": "The handle of the sender. E.g. if the type of correspondence is 'email', then this will be the email address of the sender. If the type of correspondence is twitter, then this will be the twitter handle of the sender."
                },
                "receiverHandle": {
                    "type": "string",
                    "description": "The handle of the receiver."
                },
                "date": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "CorrespondenceItemCreated": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "The unique identifier"
                }
            }
        },
        "LastContact": {
            "type": "object",
            "properties": {
                "Id": {
                    "type": "string",
                    "format": "guid+guid",
                    "description": "The identifier for this record as 'id1+id2"
                },
                "date": {
                    "type": "string",
                    "format": "date",
                    "description": "The date of the last communication."
                },
                "profileIdOne": {
                    "type": "string",
                    "format": "guid",
                    "description": "The identifier of profile one in the pair"
                },
                "profileIdTwo": {
                    "type": "string",
                    "format": "guid",
                    "description": "The identifier of profile two in the pair"
                }
            }
        },
        "Error": {
            "type": "object",
            "required": [
                "message"
            ],
            "properties": {
                "message": {
                    "type": "string"
                },
                "errors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ErrorDetail"
                    }
                }
            }
        },
        "ErrorDetail": {
            "type": "object",
            "required": [
                "resource",
                "code",
                "message"
            ],
            "properties": {
                "resource": {
                    "type": "string",
                    "description": "The resource being accessed"
                },
                "field": {
                    "type": "string",
                    "description": "Optional field used for invalid or missing fields"
                },
                "code": {
                    "type": "string",
                    "description": "Can be missing (i.e. a resource is missing), missing-field (a required field was not sent in the request), invalid (the specified field does not pass validation or already-exists (the resource already exists).",
                    "enum": [
                        "missing",
                        "missing-field",
                        "invalid",
                        "already-exists"
                    ]
                },
                "message": {
                    "type": "string"
                }
            }
        }
    }
}